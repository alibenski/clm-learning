<?php

/**
 * @file
 * Hook implementations for the Rename Admin Paths module.
 */

declare(strict_types=1);

use Drupal\rename_admin_paths\Hook\RenameAdminPathsHooks;
use Drupal\Core\Hook\Attribute\LegacyHook;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
#[LegacyHook]
function rename_admin_paths_help(string $routeName, RouteMatchInterface $routeMatch): string {
  $hook_shim = \Drupal::service(RenameAdminPathsHooks::class);
  /** @var \Drupal\rename_admin_paths\Hook\RenameAdminPathsHooks $hook_shim */
  return $hook_shim->help($routeName, $routeMatch);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function rename_admin_paths_preprocess_html(array &$variables): void {
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    $variables['attributes']['class'][] = 'path-admin';
  }
}
